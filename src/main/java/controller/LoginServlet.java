/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/JSP_Servlet/Servlet.java to edit this template
 */
package controller;

import dao.UsersDAO;
import jakarta.servlet.RequestDispatcher;
import java.io.IOException;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.Cookie;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import model.Users;

/**
 * Servlet x·ª≠ l√Ω ƒëƒÉng nh·∫≠p v√† ƒëƒÉng xu·∫•t ng∆∞·ªùi d√πng.
 *
 * @author nguyen quoc thinh - CE000000 - 05/10/2025
 */
@WebServlet(name = "LoginServlet", urlPatterns = {"/login"})
public class LoginServlet extends HttpServlet {

    /**
     * Ph∆∞∆°ng th·ª©c GET ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ x·ª≠ l√Ω ƒêƒÉng xu·∫•t (Logout) b·∫±ng c√°ch x√≥a cookie.
     */
    @Override
    protected void doGet(HttpServletRequest request,
            HttpServletResponse response)
            throws ServletException, IOException {
        
        // --- Logic ƒêƒÉng xu·∫•t b·∫±ng Cookie: X√≥a cookie 'email' v√† 'role' ---
        
        // 1. T√¨m v√† x√≥a cookie "email"
        Cookie cookieEmail = new Cookie("email", ""); 
        cookieEmail.setMaxAge(0); // ƒê·∫∑t th·ªùi gian s·ªëng v·ªÅ 0 ƒë·ªÉ x√≥a cookie ngay l·∫≠p t·ª©c
        response.addCookie(cookieEmail);

        // 2. T√¨m v√† x√≥a cookie "role"
        Cookie cookieRole = new Cookie("role", "");
        cookieRole.setMaxAge(0); // ƒê·∫∑t th·ªùi gian s·ªëng v·ªÅ 0
        response.addCookie(cookieRole);
        
        // 3. Chuy·ªÉn h∆∞·ªõng v·ªÅ trang login
        response.sendRedirect("login.jsp");
    }

    /**
     * Ph∆∞∆°ng th·ª©c POST ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ x·ª≠ l√Ω ƒêƒÉng nh·∫≠p (Login).
     */
    @Override
    protected void doPost(HttpServletRequest request,
            HttpServletResponse response)
            throws ServletException, IOException {
        
        // B∆∞·ªõc 1, 2, 3: (Gi·ªØ nguy√™n logic l·∫•y d·ªØ li·ªáu, x√°c th·ª±c, v√† ki·ªÉm tra k·∫øt qu·∫£ ƒëƒÉng nh·∫≠p)
        String email = request.getParameter("username"); 
        String password = request.getParameter("password");
        
        // Ki·ªÉm tra t√≠nh h·ª£p l·ªá c∆° b·∫£n
        if (email == null || email.trim().isEmpty() || password == null || password.isEmpty()) {
            request.setAttribute("error", "Email and password cannot be empty.");
            RequestDispatcher dispatcher = request.getRequestDispatcher("login.jsp");
            dispatcher.forward(request, response);
            return;
        }
        
        UsersDAO dao = new UsersDAO();
        Users u = dao.login(email, password); 

        // B∆∞·ªõc 3: Ki·ªÉm tra k·∫øt qu·∫£ ƒëƒÉng nh·∫≠p
        if (u != null) { // ƒêƒÉng nh·∫≠p th√†nh c√¥ng
            
            // A. G√°n User v√†o Session
            request.getSession().setAttribute("user", u);
            
            // B. G√°n cookie
            // L∆∞u EMAIL v√†o cookie
            Cookie cookieEmail = new Cookie("email", u.getEmail()); 
            cookieEmail.setMaxAge(60 * 60); 
            response.addCookie(cookieEmail);

            // G√°n Role v√†o cookie 
            String roleValue = (u.getRole() != null) ? u.getRole().toString() : "1"; // M·∫∑c ƒë·ªãnh role l√† 1 n·∫øu null
            Cookie cookieRole = new Cookie("role", roleValue);
            cookieRole.setMaxAge(60 * 60); 
            response.addCookie(cookieRole);
            
            
            // =========================================================
            // B∆Ø·ªöC 4: TH√äM LOGIC CHUY·ªÇN H∆Ø·ªöNG THEO ROLE (ƒê√É S·ª¨A) üöÄ
            // =========================================================
            if (roleValue.equals("4") ) {
                // N·∫øu role l√† 4, chuy·ªÉn h∆∞·ªõng ƒë·∫øn dashboard.jsp
                response.sendRedirect("dashboard_admin.jsp"); 
            } 
            else if (roleValue.equals("3") ) {
                // N·∫øu role l√† 4, chuy·ªÉn h∆∞·ªõng ƒë·∫øn dashboard.jsp
                response.sendRedirect("dashboard_shipper.jsp"); 
            }
            else if (roleValue.equals("2") ) {
                // N·∫øu role l√† 4, chuy·ªÉn h∆∞·ªõng ƒë·∫øn dashboard.jsp
                response.sendRedirect("dashboard_staff.jsp"); 
            }else if (roleValue.equals("1") ){
                // C√°c role kh√°c (ho·∫∑c role m·∫∑c ƒë·ªãnh) chuy·ªÉn h∆∞·ªõng ƒë·∫øn homepage.jsp
                response.sendRedirect("homepage.jsp");
            }
            // =========================================================

        } else {
            // ƒêƒÉng nh·∫≠p th·∫•t b·∫°i
            request.setAttribute("error", "Invalid email or password.");
            RequestDispatcher dispatcher = request.getRequestDispatcher("login.jsp");
            dispatcher.forward(request, response);
        }
    }
    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Servlet for handling user login and logout.";
    }
}